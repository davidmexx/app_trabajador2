{"version":3,"sources":["./src/app/pages/profile/edit-user/edit-user.page.html","./src/app/pages/profile/edit-user/edit-user.module.ts","./src/app/pages/profile/edit-user/edit-user.page.scss","./src/app/pages/profile/edit-user/edit-user.page.ts"],"names":[],"mappings":"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","file":"pages-profile-edit-user-edit-user-module-es2015.js","sourcesContent":["module.exports = \"<app-header tittle=\\\"Edit\\\"></app-header>\\n\\n<ion-content>\\n    <ion-card color=\\\"dark\\\" *ngIf=\\\"page1\\\">\\n        <ion-card-content>\\n          <ion-row size=\\\"12\\\">\\n            <ion-col size=\\\"12\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >First name<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"name\\\" ></ion-input>\\n                  </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >Last Name<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"last\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >Email<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"email\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >Phone number<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"phone\\\" type=\\\"tel\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >Address<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"address\\\" type=\\\"text\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\" >\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >City<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"city\\\" type=\\\"text\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\">\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >State<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"estate\\\" type=\\\"text\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-item mode=\\\"md\\\" color=\\\"dark\\\">\\n                    <ion-label position=\\\"stacked\\\" color=\\\"light\\\"\\n                      >Zip code<ion-text></ion-text\\n                        > </ion-label>\\n                   <ion-input color=\\\"light\\\" [(ngModel)]=\\\"zipcode\\\" type=\\\"tel\\\" required ></ion-input>\\n                </ion-item>\\n            </ion-col>\\n      </ion-row>\\n      <ion-row size=\\\"12\\\">\\n        <ion-col size=\\\"6\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"back()\\\" expand=\\\"full\\\">back</ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n            <ion-button (click)=\\\"save()\\\" expand=\\\"full\\\">save</ion-button>\\n        </ion-col>\\n      </ion-row>\\n      </ion-card-content>\\n      </ion-card>\\n      <ion-card color=\\\"dark\\\" *ngIf=\\\"page2\\\">\\n        <ion-card-content>\\n          <ion-row size=\\\"12\\\">\\n            <ion-col  *ngFor=\\\"let data of newDays\\\"> \\n                <ion-item color=\\\"dark\\\">\\n                    <ion-label style=\\\"color: white;\\\" class=\\\"ion-text-wrap\\\">{{data.name}}</ion-label>\\n                    <ion-checkbox color=\\\"primary\\\"  slot=\\\"start\\\" [(ngModel)]=\\\"data.isChecked\\\"></ion-checkbox>\\n                </ion-item>\\n              </ion-col>\\n          </ion-row>\\n          <ion-row size=\\\"12\\\">\\n              <ion-col size=\\\"6\\\">\\n                <ion-button color=\\\"dark\\\" (click)=\\\"back()\\\" expand=\\\"full\\\">back</ion-button>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-button expand=\\\"full\\\" (click)=\\\"saveDays()\\\">save</ion-button>\\n              </ion-col>\\n          </ion-row>\\n         \\n        </ion-card-content>\\n      </ion-card>\\n      <ion-card color=\\\"dark\\\" *ngIf=\\\"page3\\\">\\n          <ion-card-content>\\n            <ion-row size=\\\"12\\\">\\n              <ion-col  *ngFor=\\\"let data of newTrasnport\\\"> \\n                  <ion-item color=\\\"dark\\\">\\n                      <ion-label style=\\\"color: white;\\\" class=\\\"ion-text-wrap\\\">{{data.name}}</ion-label>\\n                      <ion-checkbox color=\\\"primary\\\"  slot=\\\"start\\\" [(ngModel)]=\\\"data.isChecked\\\"></ion-checkbox>\\n                  </ion-item>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row size=\\\"12\\\">\\n                <ion-col size=\\\"6\\\">\\n                  <ion-button color=\\\"dark\\\" (click)=\\\"back()\\\" expand=\\\"full\\\">back</ion-button>\\n                </ion-col>\\n                <ion-col size=\\\"6\\\">\\n                  <ion-button expand=\\\"full\\\" (click)=\\\"saveTransport()\\\">save</ion-button>\\n                </ion-col>\\n            </ion-row>\\n           \\n          </ion-card-content>\\n        </ion-card>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditUserPage } from './edit-user.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditUserPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [EditUserPage]\n})\nexport class EditUserPageModule {}\n","module.exports = \"ion-content {\\n  --ion-background-color: #333232;\\n}\\n\\nion-item {\\n  --highlight-color-focused: rgb(17, 221, 119);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9lZGl0LXVzZXIvQzpcXFVzZXJzXFxpc21hZVxcRG9jdW1lbnRzXFxhcHBfdHJhYmFqYWRvclxcYXBwX3RyYWJhamFkb3Ivc3JjXFxhcHBcXHBhZ2VzXFxwcm9maWxlXFxlZGl0LXVzZXJcXGVkaXQtdXNlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvZWRpdC11c2VyL2VkaXQtdXNlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQ0NKOztBRENFO0VBQ0UsNENBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvZWRpdC11c2VyL2VkaXQtdXNlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMjMyO1xyXG4gIH1cclxuICBpb24taXRlbSB7XHJcbiAgICAtLWhpZ2hsaWdodC1jb2xvci1mb2N1c2VkOiByZ2IoMTcsIDIyMSwgMTE5KTtcclxuICB9IiwiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMjMyO1xufVxuXG5pb24taXRlbSB7XG4gIC0taGlnaGxpZ2h0LWNvbG9yLWZvY3VzZWQ6IHJnYigxNywgMjIxLCAxMTkpO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { TestingService } from '../../../services/testing.service';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport Swal from 'sweetalert2';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.page.html',\n  styleUrls: ['./edit-user.page.scss'],\n})\nexport class EditUserPage implements OnInit {\n\n  constructor(\n    private storage: Storage, \n    private services: TestingService, \n    private loadingController: LoadingController, \n    private router: Router, \n    private activateRouter: ActivatedRoute, \n    public toastController: ToastController, private nav : NavController) { }\n  user: any = [];\n  name: string;\n  last: string;\n  email: string;\n  phone: string;\n  token: string;\n  id: number;\n  hola: string;\n  page1 = false;\n  page2 = false;\n  page3 = false;\n  newAdrres: any =  [];\n  address: string;\n  city: string;\n  estate: string; \n  zipcode: string;\n  newDays: any = [];\n  newTrasnport: any = [];\n  temporal = [];\n  daysS: string;\n  ngOnInit() {\n  }\n  ionViewWillEnter(){\n    this.newAdrres = [];\n    this.newDays = [];\n    this.newTrasnport = [];\n    if(this.activateRouter.snapshot.paramMap.get(\"id\") == \"1\"){\n      //console.log(\"hola\")\n      this.page1 = true;\n    }\n    if(this.activateRouter.snapshot.paramMap.get(\"id\") == \"2\"){\n      this.page2 = true;\n    }\n    if(this.activateRouter.snapshot.paramMap.get(\"id\") == \"3\"){\n      this.page3 = true;\n    }\n    //console.log();\n    this.storage.get(\"token\").then(res =>{\n      this.getUser(res.token, res.user);\n      this.token = res.token;\n      this.id = res.user;\n    })\n    this.getdays();\n    this.getTransport();\n    \n    \n  }\n  async getUser(token, id){\n    const loading = await this.loadingController.create({\n      message: ''\n    });\n    this.presentLoading(loading);\n    await this.services.getUser(token, id).subscribe(res =>{\n      this.name = res.data.first_name;\n      this.last = res.data.last_name;\n      this.email = res.data.email;\n      this.phone = res.data.phone_number;\n      if(res.data.address == null){\n        loading.dismiss();\n      }else{\n      this.separator(res.data.address);\n      loading.dismiss();\n      }\n    })\n  }\n  async presentLoading(loading) {\n\t\treturn await loading.present();\n  }\n  save(){\n    let data = {\n      first_name: this.name,\n      last_name: this.last,\n      email: this.email,\n      phone_number: this.phone,\n      id: this.id,\n      address: `${this.address}|${this.city}|${this.estate}|${this.zipcode}|`\n    }\n    this.services.editUser(data, this.token).subscribe(res =>{  \n      if(res.type == \"success\"){\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n\n        })\n        Toast.fire({\n          type: 'success',\n          title: 'Profile update successfully'\n        }).then((resu) =>{\n          if(resu.dismiss === Swal.DismissReason.timer){\n              this.router.navigate([\"/user/user\"]);\n             \n              //this.storage.set(\"validate\", \"si\"); \n          }\n        })\n      }\n    })\n  }\n  separator(string){\n    //let cadena= \"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec\";\n    let res = string.split(\"|\");\n    res.length = res.length -1;\n    this.newAdrres.push(...res)\n    //this.days.length = this.days.length -1;\n    this.address = this.newAdrres[0];\n    this.city = this.newAdrres[1];\n    this.estate = this.newAdrres[2];\n    this.zipcode = this.newAdrres[3];\n    //console.log(this.address);\n  }\n  back(){\n    this.router.navigate([\"/user/user\"]);\n  }\n  getdays(){\n    this.newDays =[];\n    let a;\n    this.storage.get(\"days\").then(res =>{\n       this.newDays = res;\n       console.log(this.newDays)\n    }) \n  }\n  getTransport(){\n    this.storage.get(\"transport\").then(res =>{\n      this.newTrasnport = res;\n      console.log(this.newTrasnport)\n   }) \n  }\n  saveDays(){\n    //console.log(this.newDays);\n    this.dias();\n    this.saveTradesDays();\n  }\n  dias(){\n    this.temporal = [];\n    for(let i = 0; i < this.newDays.length; i++ ){\n      if(this.newDays[i].isChecked == true){\n        this.temporal.push(`${this.newDays[i].name}|`);\n      }\n    }\n      //console.log(this.temporal);\n      //console.log(this.temporal.join(''));\n      //convertir array en string\n      this.daysS = this.temporal.join('');\n    console.log(this.daysS);\n  }\n  async saveTradesDays(){\n    let data = {\n      id: this.id,\n      working_days: this.daysS\n    }\n   await this.services.addTradeWorkinDays(data, this.token).subscribe(res =>{\n      if(res.type == \"success\"){\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n\n        })\n        Toast.fire({\n          type: 'success',\n          title: 'Availability update successfully'\n        }).then((resu) =>{\n          if(resu.dismiss === Swal.DismissReason.timer){\n            this.storage.remove(\"days\")\n              //this.router.navigate([\"/user/user/\"]);\n              //this.nav.navigateRoot(\"/user/user\"); \n             // this.nav.navigateForward(\"/user/user\");\n              //this.router.navigateByUrl(\"/user/user\");\n              //this.nav.navigateRoot([\"/user/user\"]);\n              this.nav.pop();\n              //this.storage.set(\"validate\", \"si\"); \n          }\n        })\n      }\n    })\n  }\n  saveTransport(){\n    if(this.newTrasnport[0].isChecked == true && this.newTrasnport[1].isChecked){\n      this.presentToast(\"Select one\");\n    }else{\n    for(let i = 0; i < this.newTrasnport.length; i++){\n      if(this.newTrasnport[i].isChecked == true){\n        let data = {\n          id: this.id,\n          transport: this.newTrasnport[i].name\n        }\n        this.services.addTradesTransport(data, this.token).subscribe(res =>{\n          if(res.type == \"success\"){\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 3000\n    \n            })\n            Toast.fire({\n              type: 'success',\n              title: 'Availability update successfully'\n            }).then((resu) =>{\n              if(resu.dismiss === Swal.DismissReason.timer){\n                this.storage.remove(\"days\")\n                  this.router.navigate([\"/user/user\"]);\n                  //this.storage.set(\"validate\", \"si\"); \n              }\n            })\n          }\n          //this.router.navigate([\"/user\"]);\n        })\n      }else{\n        console.log(` no aceptado ${this.newTrasnport[i].name}`)\n      }\n    }    \n  }\n}\n\n\nasync presentToast(mensaje) {\n  const toast = await this.toastController.create({\n    message: `${mensaje}`,\n    duration: 2000,\n    position: 'top'\n  });\n  toast.present();\n}\nionViewDidLeave(){\n  this.services.getUser(this.token, this.id);\n}\n}\n"],"sourceRoot":""}